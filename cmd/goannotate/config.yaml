annotations:
  # annotators contains an entry for each supported annotation. The
  # configuration for each annotation depends on the annotator itself except
  # that all annotators must have a 'type' key that names the go type of tha
  # annotator and a 'name' key than names the annotation. Each annotator must
  # be compiled in to the goannotate binary priort to it being usable here.
  # The --list command will provide documentation on the current set of compiled
  # in annotators.
    # AddLogcall annotates functions with a logging call that records
    # entry/exit from them. The example here is appropriate for vanadium.
  - type: cloudeng.io/go/cmd/goannotate/annotators.AddLogCall
    name: vanadium-add-logcall
    # Packages specifies the packages to be annotated. It may be overriden
    # from the command line.
    packages:
      - "v.io/x/ref/runtime/internal/naming/namespace"
    # Interfaces lists the interfaces that define the API.
    interfaces:
      - "v.io/v23/namespace"
    # Functions lists the functions that define the API.
    functions:
    # contextType is the context type used by this API.
    contextType: v.io/v23/context.T
    # Import is the import path for the logging call to be added.
    import: v.io/x/ref/lib/apilog
    # logcall is the import path itself.
    logcall: apilog.LogCallf
    # Functions must have at least this number of top-level statements to
    # be worth annotating.
    atLeastStatements: 1
    # Do not annotate functions which have this text in any comments associated
    # with or within the function.
    noAnnotationComment: "nologcall:"
    # RmLogCall removes annotations previously added to log entry/exit
    # from a specified set of functions. The example here is appropriate for
    # vanadium.
  - type: cloudeng.io/go/cmd/goannotate/annotators.RmLogCall
    name: vanadium-rm-logcall
    packages:
      - "v.io/x/ref/..."
    interfaces:
      - "v.io/v23/namespace"
    functions:
    logcall: apilog.LogCallf
    comment: "gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT"
    deferred: true
    # EnsureCopyrightAndLicense ensures that the specified copyright and license
    # is present at the top of every go file.
  - type: cloudeng.io/go/cmd/goannotate/annotators.EnsureCopyrightAndLicense
    name: personal-copyright
    copyright: "// Copyright 2020 Cosmos Nicolaou. All rights reserved."
    license: "// Use of this source code is governed by the Apache-2.0\n
// license that can be found in the LICENSE file."
  - type: cloudeng.io/go/cmd/goannotate/annotators.EnsureCopyrightAndLicense
    name: cloudeng-copyright
    copyright: "// Copyright 2020 cloudeng llc. All rights reserved."
    license: "// Use of this source code is governed by the Apache-2.0\n
// license that can be found in the LICENSE file."
options:
  # Default concurrency.
  concurrency: 0
debug:
  # Provide a file name here to enable cpu profiling.
  cpu_profile:
