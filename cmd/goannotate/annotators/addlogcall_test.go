// Copyright 2020 cloudeng llc. All rights reserved.
// Use of this source code is governed by the Apache-2.0
// license that can be found in the LICENSE file.

package annotators_test

import (
	"context"
	"testing"

	"cloudeng.io/go/cmd/goannotate/annotators"
	"cloudeng.io/go/cmd/goannotate/annotators/internal/testutil"
)

var expectedAddcall = []testutil.DiffReport{
	{Name: "empty.go", Diff: `2a3,4
> import "cloudeng.io/go/cmd/goannotate/annotators/testdata/apilog"
> 
5a8
> 	defer apilog.LogCallf(nil, "cloudeng.io/go/cmd/goannotate/annotators/testdata/impl.Write", "buf[:%d]=...", len(buf))(nil, "_=?") // DO NOT EDIT, AUTO GENERATED BY cloudeng.io/go/cmd/goannotate/annotators.AddLogCall#add
9a13
> 	defer apilog.LogCallf(nil, "cloudeng.io/go/cmd/goannotate/annotators/testdata/impl.APIEmpty", "n=%d", n)(nil, "_=?") // DO NOT EDIT, AUTO GENERATED BY cloudeng.io/go/cmd/goannotate/annotators.AddLogCall#add
`},
	{Name: "existing.go", Diff: `17a18
> 	defer apilog.LogCallf(nil, "cloudeng.io/go/cmd/goannotate/annotators/testdata/impl.APINew", "n=%d", n)(nil, "_=?") // DO NOT EDIT, AUTO GENERATED BY cloudeng.io/go/cmd/goannotate/annotators.AddLogCall#add
`},
	{Name: "legacy.go", Diff: `8c8,9
< 	defer apilog.LogCallfLegacy(nil, "buf=%v...", buf)(nil, "") // gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT
---
> 	defer apilog.LogCallf(nil, "cloudeng.io/go/cmd/goannotate/annotators/testdata/impl.Write", "buf[:%d]=...", len(buf))(nil, "_=?") // DO NOT EDIT, AUTO GENERATED BY cloudeng.io/go/cmd/goannotate/annotators.AddLogCall#add
> 	defer apilog.LogCallfLegacy(nil, "buf=%v...", buf)(nil, "")                                                                      // gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT
13c14,15
< 	defer apilog.LogCallfLegacy(nil, "n=%v...", n)(nil, "") // gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT
---
> 	defer apilog.LogCallf(nil, "cloudeng.io/go/cmd/goannotate/annotators/testdata/impl.APILegacy", "n=%d", n)(nil, "_=?") // DO NOT EDIT, AUTO GENERATED BY cloudeng.io/go/cmd/goannotate/annotators.AddLogCall#add
> 	defer apilog.LogCallfLegacy(nil, "n=%v...", n)(nil, "")                                                               // gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT
18c20,21
< 	apilog.LogCallfLegacy(nil, "n=%v...", n)(nil, "") // gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT
---
> 	defer apilog.LogCallf(nil, "cloudeng.io/go/cmd/goannotate/annotators/testdata/impl.APILegacyNonDefer", "n=%d", n)(nil, "_=?") // DO NOT EDIT, AUTO GENERATED BY cloudeng.io/go/cmd/goannotate/annotators.AddLogCall#add
> 	apilog.LogCallfLegacy(nil, "n=%v...", n)(nil, "")                                                                             // gologcop: DO NOT EDIT, MUST BE FIRST STATEMENT
`},
}

func TestAddLogCall(t *testing.T) {
	ctx := context.Background()
	tmpdir, cleanup := testutil.SetupAnnotators(t)
	defer cleanup()
	err := annotators.Lookup("add").Do(ctx, tmpdir, []string{here + "impl"})
	if err != nil {
		t.Errorf("Do: %v", err)
	}
	original, copies := list(t, "testdata/impl/"), list(t, tmpdir)
	diffs := testutil.DiffMultipleFiles(t, original, copies)
	testutil.CompareDiffReports(t, diffs, expectedAddcall)
}
